{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;AAYA,MAAa,WAAW;IAKpB,YAAY,aAAkC;QAC1C,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,UAAU,GAAG,aAAa,CAAC,UAAU,CAAC;QAC3C,IAAI,CAAC,UAAU,GAAG,aAAa,CAAC,UAAU,CAAC;IAC/C,CAAC;IAED,UAAU;QACN,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;YACzB,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;YACxB,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,OAAO,CAAC;SACvC;aAAM;YACH,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;YACzB,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,MAAM,CAAC;SACtC;IACL,CAAC;IAED,IAAI;QACA,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;QACzB,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,CAAC,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,MAAM,CAAC;IACvC,CAAC;IAED,cAAc;QACV,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACtE,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACpE,CAAC;CACJ;AA/BD,kCA+BC;AAED,MAAM,MAAM,GAAG,CAAC,KAAa,EAAE,EAAE,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AAEhE,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC;IAChC,WAAW,EAAE,MAAM,CAAC,QAAQ,CAAqB;IACjD,UAAU,EAAE,MAAM,CAAC,OAAO,CAAsB;IAChD,UAAU,EAAE,MAAM,CAAC,OAAO,CAAsB;CACnD,CAAC,CAAC;AAEH,WAAW,CAAC,cAAc,EAAE,CAAC","sources":["webpack://curso-typescript/./src/aula-35-exercicio-video/index.ts"],"sourcesContent":["interface VideoPlayerElements {\n    videoPlayer: HTMLVideoElement;\n    playButton: HTMLButtonElement;\n    stopButton: HTMLButtonElement;\n}\n\ninterface VideoPlayerProtocol {\n    playToggle(): void;\n    stop(): void;\n    iniciarEventos(): void;\n}\n\nexport class VideoPlayer implements VideoPlayerProtocol {\n    private videoPlayer: HTMLVideoElement;\n    private playButton: HTMLButtonElement;\n    private stopButton: HTMLButtonElement;\n\n    constructor(videoElements: VideoPlayerElements) {\n        this.videoPlayer = videoElements.videoPlayer;\n        this.playButton = videoElements.playButton;\n        this.stopButton = videoElements.stopButton;\n    }\n\n    playToggle(): void {\n        if (this.videoPlayer.paused) {\n            this.videoPlayer.play();\n            this.playButton.innerText = 'Pause';\n        } else {\n            this.videoPlayer.pause();\n            this.playButton.innerText = 'Play';\n        }\n    }\n\n    stop(): void {\n        this.videoPlayer.pause();\n        this.videoPlayer.currentTime = 0;\n        this.playButton.innerText = 'Play';\n    }\n\n    iniciarEventos(): void {\n        this.playButton.addEventListener('click', this.playToggle.bind(this));\n        this.stopButton.addEventListener('click', this.stop.bind(this));\n    }\n}\n\nconst select = (query: string) => document.querySelector(query);\n\nconst videoPlayer = new VideoPlayer({\n    videoPlayer: select('.video') as HTMLVideoElement,\n    playButton: select('.play') as HTMLButtonElement,\n    stopButton: select('.stop') as HTMLButtonElement,\n});\n\nvideoPlayer.iniciarEventos();\n"],"names":[],"sourceRoot":""}